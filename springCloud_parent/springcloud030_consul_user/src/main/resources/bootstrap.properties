#设置链接config，以后配置信息都可以在gitee上进行维护了
#开启配置中心  开启config的自动发现--去注册中心查找
spring.cloud.config.discovery.enabled=true
#去注册中心找对应id的服务器
spring.cloud.config.discovery.service-id=SPRINGCONFIG
#去哪个分支获取、文件名称、环境（测试、生产、开发）
spring.cloud.config.label=master
spring.cloud.config.name=user
spring.cloud.config.profile=dev


#配置向consul注册的地址
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500



#
##端口号与服务名称
#server.port=8031
#spring.application.name=USERSERVICE
#
#
#
##负载使用的是ribbon，ribbon+RestTemplate已经使用openFeign都是使用的IRule定的负载策略，所以这个适用于ribbon和openfeign的的附在策略
##修改负载策略，默认是轮巡，改成随机，id（服务）+点+ribbon.NFLoadBalancerRuleClassName等于策略类的全路径，查看全路径可以通过查看IRule的实现类ctrl+T
#ORDERSERVICE.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#
#
##配置格式feign.client.config + 服务名称id + read-timeout / connect-timeout
##设置openfeign的调用等待时间，默认是1秒----这个默认时间太短了，很容易出现意外
##feign.client.config.ORDERSERVICE.readTimeout=5000
###配置指定服务的的连接时间，默认一秒时间太多很容易出现意外
##feign.client.config.ORDERSERVICE.connectTimeout=5000
##修改默认配置，这个配置修改了所有的服务的 等待 与 响应 时间--------------------------------------------------------------------上面的两个配置是指定单个的服务设置 链接 与 等待相应的时间----------
#feign.client.config.default.connectTimeout=5000
#feign.client.config.default.readTimeout=5000
#
#
##指定日志级别
##logging.level.com.bobocai=debug
##feign调用指定的日志级别 none（不展示调用日志）、basic（只展示url、端口、相应状态以及执行时间）、headers（在basic的基础上又增加了响应头的）、full（记录请求相应的header、body和元数据）
#feign.client.config.ORDERSERVICE.loggerLevel=full
#
##开启openfeigm中的hystrix熔断机制
#feign.hystrix.enabled=true